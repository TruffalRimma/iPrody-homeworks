<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.4</version>
        <relativePath/>
    </parent>

    <groupId>com.iprody</groupId>
    <artifactId>xpayment-adapter-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>XPayment Adapter App</name>
    <description>Async Payment Processing App</description>
    <packaging>jar</packaging>

    <properties>
        <java.version>21</java.version>
        <jackson.databind.version>0.2.7</jackson.databind.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <common.version>0.0.1-SNAPSHOT</common.version>
        <maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
        <maven.checkstyle.plugin.version>3.6.0</maven.checkstyle.plugin.version>
        <openapi.generator.plugin.version>7.15.0</openapi.generator.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <!-- RabbitMQ -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson.databind.version}</version>
        </dependency>

        <dependency>
            <groupId>com.iprody</groupId>
            <artifactId>common</artifactId>
            <version>${common.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- TESTS -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi.generator.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- inputSpec - путь к файлу или URL спецификации OpenAPI -->
                            <inputSpec>${project.basedir}/xpayment-api.openapi.yml</inputSpec>
                            <!-- generatorName - язык для генерации кода (здесь Java) -->
                            <generatorName>java</generatorName>
                            <!-- library - используемая HTTP-библиотека -->
                            <library>resttemplate</library>
                            <!-- output - директория для сгенерированного кода -->
                            <output>${project.build.directory}/generated-sources/openapi</output>
                            <!-- apiPackage - пакет для генерируемых API-классов -->
                            <apiPackage>com.iprody.xpayment.adapter.app.api.client</apiPackage>
                            <!-- modelPackage - пакет для генерируемых классов модели данных (классы для
                                 запросов и ответов на запросы) -->
                            <modelPackage>com.iprody.xpayment.adapter.app.api.model</modelPackage>
                            <!-- Отключаем генерацию тестов -->
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <!-- configOptions - дополнительные опции генерации (useTags — группировка по
                                 тегам, useJakartaEe — использование Jakarta EE) -->
                            <configOptions>
                                <useTags>true</useTags>
                                <useJakartaEe>true</useJakartaEe>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>../checkstyle.xml</configLocation>
                    <inputEncoding>UTF_8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <consoleOutput>true</consoleOutput>
                    <failOnViolation>true</failOnViolation>
                    <excludeGeneratedSources>true</excludeGeneratedSources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
