# ==============================================
# CURL запросы для тестирования PaymentController
# ==============================================

# 1. GET /api/payments/{guid} - получение платежа по GUID
curl -X GET http://localhost:8080/api/payments/ac328a1a-1e60-4dd3-bee5-ed573d74c841

# 2. GET /api/payments - получение всех платежей
curl -X GET http://localhost:8080/api/payments

# 3. GET /api/payments/search - поиск платежей с фильтрацией и пагинацией
# Без фильтров
curl -X GET http://localhost:8080/api/payments/search?page=0&size=10&sortBy=createdAt&direction=desc

# С фильтрами
curl -X GET http://localhost:8080/api/payments/search?amountFrom=100&amountTo=1000&status=RECEIVED&page=0&size=25&sortBy=amount&direction=asc

# 4. POST /api/payments - создание нового платежа
curl -X POST http://localhost:8080/api/payments \
-H "Content-Type: application/json" \
-d '{
    "guid": "ac328a1a-1e60-4dd3-bee5-ed573d74c841",
    "inquiryRefId": "607ed0ea-cb8a-4ff8-a694-1213c314e65c",
    "amount": 99.99,
    "currency": "USD",
    "transactionRefId": "f113e373-b7b0-4f38-abf6-ccc3a89b8236",
    "status": "RECEIVED",
    "note": "Initial test payment",
    "createdAt": "2025-01-01T09:00:00Z",
    "updatedAt": "2025-01-01T09:00:00Z"
}'

# 5. PUT /api/payments/{guid} - полное обновление платежа
curl -X PUT http://localhost:8080/api/payments/f7eebc99-9c0b-4ef8-bb6d-6bb9bd380a10 \
-H "Content-Type: application/json" \
-d ' {
    "guid": "f7eebc99-9c0b-4ef8-bb6d-6bb9bd380a10",
    "inquiryRefId": "f7eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
    "amount": 100.50,
    "currency": "USD",
    "transactionRefId": "f7eebc99-9c0b-4ef8-bb6d-6bb9bd380a12",
    "status": "RECEIVED",
    "note": "Note for the payment",
    "createdAt": "2023-01-15T10:30:00Z",
    "updatedAt": "2023-01-15T10:30:00Z"
}'

# 6. PATCH /api/payments/{guid}/note - обновление только заметки платежа
curl -X PATCH http://localhost:8080/api/payments/f7eebc99-9c0b-4ef8-bb6d-6bb9bd380a10/note \
-H "Content-Type: application/json" \
-d '{
    "note": "New updated note for the payment"
}'

# 7. DELETE /api/payments/{guid} - удаление платежа
curl -X DELETE http://localhost:8080/api/payments/ac328a1a-1e60-4dd3-bee5-ed573d74c841

# 8. POST /realms/iprody-lms/protocol/openid-connect/token - запрос токена
curl -v -X POST http://localhost:8085/realms/iprody-lms/protocol/openid-connect/token \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "grant_type=password" \
  -d "client_id=basic_client" \
  -d "client_secret=myclient-secret" \
  -d "username=reader_user" \
  -d "password=testpassword3"

# Пример ответа
# В поле access_token ответа содержится JWT-токен, который используется для аутентификации (<HEADER>.<PAYLOAD>.<SIGNATURE>)
# Также в ответе содержится информация о сроке действия токена и т. н. refresh_token, который можно
# использовать для продления аутентификации и получения нового токена перед истечением срока действия старого.
{
"access_token":
"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImF1ZCI6Im
 15Y2xpZW50IiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9kZW1vIiwicm
 VhbG1fYWNjZXNzIjp7InJvbGVzIjpbInVzZXIiXX0sInByZWZlcnJlZF91c2VybmFtZSI6In
 Rlc3R1c2VyIiwiZXhwIjoxNzAwMDAwMDAwLCJpYXQiOjE3MDAwMDAwMDAsImp0aSI6IjEyMy
 4uLiIsImVtYWlsIjoiZGVtby50ZXN0QGVtYWlsLmNvbSJ9.abc123...",
"expires_in": 300,
"refresh_expires_in": 1800,
"refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
"token_type": "Bearer",
"not-before-policy": 0,
"session_state": "abcf-1234-xyz",
"scope": "profile email"
}

# Далее в запросах нужно добавлять header "Authorization: Bearer <полученный токен доступа>"
